document.write('<link rel="stylesheet" href="https://github.githubassets.com/assets/gist-embed-232d920b3dfe.css">')
document.write('<div id=\"gist117283191\" class=\"gist\">\n    <div class=\"gist-file\" translate=\"no\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-art053_python_010-py\" class=\"file my-2\">\n    \n    <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper data type-python  \">\n\n        \n<div class=\"js-check-bidi js-blob-code-container blob-code-content\">\n\n  <template class=\"js-file-alert-template\">\n  <div data-view-component=\"true\" class=\"flash flash-warn flash-full d-flex flex-items-center\">\n  <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-alert\">\n    <path d=\"M6.457 1.047c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0 1 14.082 15H1.918a1.75 1.75 0 0 1-1.543-2.575Zm1.763.707a.25.25 0 0 0-.44 0L1.698 13.132a.25.25 0 0 0 .22.368h12.164a.25.25 0 0 0 .22-.368Zm.53 3.996v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 11a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z\"><\/path>\n<\/svg>\n    <span>\n      This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters.\n      <a class=\"Link--inTextBlock\" href=\"https://github.co/hiddenchars\" target=\"_blank\">Learn more about bidirectional Unicode characters<\/a>\n    <\/span>\n\n\n  <div data-view-component=\"true\" class=\"flash-action\">        <a href=\"{{ revealButtonHref }}\" data-view-component=\"true\" class=\"btn-sm btn\">    Show hidden characters\n<\/a>\n<\/div>\n<\/div><\/template>\n<template class=\"js-line-alert-template\">\n  <span aria-label=\"This line has hidden Unicode characters\" data-view-component=\"true\" class=\"line-alert tooltipped tooltipped-e\">\n    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-alert\">\n    <path d=\"M6.457 1.047c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0 1 14.082 15H1.918a1.75 1.75 0 0 1-1.543-2.575Zm1.763.707a.25.25 0 0 0-.44 0L1.698 13.132a.25.25 0 0 0 .22.368h12.164a.25.25 0 0 0 .22-.368Zm.53 3.996v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 11a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z\"><\/path>\n<\/svg>\n<\/span><\/template>\n\n  <table data-hpc class=\"highlight tab-size js-file-line-container js-code-nav-container js-tagsearch-file\" data-tab-size=\"8\" data-paste-markdown-skip data-tagsearch-lang=\"Python\" data-tagsearch-path=\"Art053_Python_010.py\">\n        <tr>\n          <td id=\"file-art053_python_010-py-L1\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"1\"><\/td>\n          <td id=\"file-art053_python_010-py-LC1\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-k>def<\/span> <span class=pl-en>train<\/span>(<span class=pl-s1>g_model<\/span>, <span class=pl-s1>d_model<\/span>, <span class=pl-s1>gan_model<\/span>, <span class=pl-s1>dataset<\/span>, <span class=pl-s1>latent_dim<\/span>, <span class=pl-s1>n_epochs<\/span><span class=pl-c1>=<\/span><span class=pl-c1>1001<\/span>, <span class=pl-s1>n_batch<\/span><span class=pl-c1>=<\/span><span class=pl-c1>32<\/span>, <span class=pl-s1>n_eval<\/span><span class=pl-c1>=<\/span><span class=pl-c1>100<\/span>):<\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L2\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"2\"><\/td>\n          <td id=\"file-art053_python_010-py-LC2\" class=\"blob-code blob-code-inner js-file-line\">    <\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L3\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"3\"><\/td>\n          <td id=\"file-art053_python_010-py-LC3\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-c># Our batch to train the discriminator will consist of half real images and half fake (generated) images<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L4\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"4\"><\/td>\n          <td id=\"file-art053_python_010-py-LC4\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-s1>half_batch<\/span> <span class=pl-c1>=<\/span> <span class=pl-en>int<\/span>(<span class=pl-s1>n_batch<\/span> <span class=pl-c1>/<\/span> <span class=pl-c1>2<\/span>)<\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L5\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"5\"><\/td>\n          <td id=\"file-art053_python_010-py-LC5\" class=\"blob-code blob-code-inner js-file-line\">    <\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L6\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"6\"><\/td>\n          <td id=\"file-art053_python_010-py-LC6\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-c># We will manually enumare epochs <\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L7\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"7\"><\/td>\n          <td id=\"file-art053_python_010-py-LC7\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-k>for<\/span> <span class=pl-s1>i<\/span> <span class=pl-c1>in<\/span> <span class=pl-en>range<\/span>(<span class=pl-s1>n_epochs<\/span>):<\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L8\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"8\"><\/td>\n          <td id=\"file-art053_python_010-py-LC8\" class=\"blob-code blob-code-inner js-file-line\">    <\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L9\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"9\"><\/td>\n          <td id=\"file-art053_python_010-py-LC9\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-c># Discriminator training<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L10\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"10\"><\/td>\n          <td id=\"file-art053_python_010-py-LC10\" class=\"blob-code blob-code-inner js-file-line\">        <span class=pl-c># Prep real samples<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L11\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"11\"><\/td>\n          <td id=\"file-art053_python_010-py-LC11\" class=\"blob-code blob-code-inner js-file-line\">        <span class=pl-s1>x_real<\/span>, <span class=pl-s1>y_real<\/span> <span class=pl-c1>=<\/span> <span class=pl-en>real_samples<\/span>(<span class=pl-s1>half_batch<\/span>, <span class=pl-s1>dataset<\/span>)<\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L12\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"12\"><\/td>\n          <td id=\"file-art053_python_010-py-LC12\" class=\"blob-code blob-code-inner js-file-line\">        <span class=pl-c># Prep fake (generated) samples<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L13\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"13\"><\/td>\n          <td id=\"file-art053_python_010-py-LC13\" class=\"blob-code blob-code-inner js-file-line\">        <span class=pl-s1>x_fake<\/span>, <span class=pl-s1>y_fake<\/span> <span class=pl-c1>=<\/span> <span class=pl-en>fake_samples<\/span>(<span class=pl-s1>g_model<\/span>, <span class=pl-s1>latent_dim<\/span>, <span class=pl-s1>half_batch<\/span>)<\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L14\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"14\"><\/td>\n          <td id=\"file-art053_python_010-py-LC14\" class=\"blob-code blob-code-inner js-file-line\">        <\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L15\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"15\"><\/td>\n          <td id=\"file-art053_python_010-py-LC15\" class=\"blob-code blob-code-inner js-file-line\">        <span class=pl-c># Train the discriminator using real and fake samples<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L16\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"16\"><\/td>\n          <td id=\"file-art053_python_010-py-LC16\" class=\"blob-code blob-code-inner js-file-line\">        <span class=pl-v>X<\/span>, <span class=pl-s1>y<\/span> <span class=pl-c1>=<\/span> <span class=pl-s1>np<\/span>.<span class=pl-en>vstack<\/span>((<span class=pl-s1>x_real<\/span>, <span class=pl-s1>x_fake<\/span>)), <span class=pl-s1>np<\/span>.<span class=pl-en>vstack<\/span>((<span class=pl-s1>y_real<\/span>, <span class=pl-s1>y_fake<\/span>))<\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L17\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"17\"><\/td>\n          <td id=\"file-art053_python_010-py-LC17\" class=\"blob-code blob-code-inner js-file-line\">        <span class=pl-s1>discriminator_loss<\/span>, <span class=pl-s1>_<\/span> <span class=pl-c1>=<\/span> <span class=pl-s1>d_model<\/span>.<span class=pl-en>train_on_batch<\/span>(<span class=pl-v>X<\/span>, <span class=pl-s1>y<\/span>)<\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L18\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"18\"><\/td>\n          <td id=\"file-art053_python_010-py-LC18\" class=\"blob-code blob-code-inner js-file-line\">    <\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L19\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"19\"><\/td>\n          <td id=\"file-art053_python_010-py-LC19\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-c># Generator training<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L20\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"20\"><\/td>\n          <td id=\"file-art053_python_010-py-LC20\" class=\"blob-code blob-code-inner js-file-line\">        <span class=pl-c># Get values from the latent space to be used as inputs for the generator<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L21\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"21\"><\/td>\n          <td id=\"file-art053_python_010-py-LC21\" class=\"blob-code blob-code-inner js-file-line\">        <span class=pl-s1>x_gan<\/span> <span class=pl-c1>=<\/span> <span class=pl-en>latent_vector<\/span>(<span class=pl-s1>latent_dim<\/span>, <span class=pl-s1>n_batch<\/span>)<\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L22\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"22\"><\/td>\n          <td id=\"file-art053_python_010-py-LC22\" class=\"blob-code blob-code-inner js-file-line\">        <span class=pl-c># While we are generating fake samples, <\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L23\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"23\"><\/td>\n          <td id=\"file-art053_python_010-py-LC23\" class=\"blob-code blob-code-inner js-file-line\">        <span class=pl-c># we want GAN generator model to create examples that resemble the real ones,<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L24\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"24\"><\/td>\n          <td id=\"file-art053_python_010-py-LC24\" class=\"blob-code blob-code-inner js-file-line\">        <span class=pl-c># hence we want to pass labels corresponding to real samples, i.e. y=1, not 0.<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L25\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"25\"><\/td>\n          <td id=\"file-art053_python_010-py-LC25\" class=\"blob-code blob-code-inner js-file-line\">        <span class=pl-s1>y_gan<\/span> <span class=pl-c1>=<\/span> <span class=pl-s1>np<\/span>.<span class=pl-en>ones<\/span>((<span class=pl-s1>n_batch<\/span>, <span class=pl-c1>1<\/span>))<\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L26\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"26\"><\/td>\n          <td id=\"file-art053_python_010-py-LC26\" class=\"blob-code blob-code-inner js-file-line\">        <\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L27\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"27\"><\/td>\n          <td id=\"file-art053_python_010-py-LC27\" class=\"blob-code blob-code-inner js-file-line\">        <span class=pl-c># Train the generator via a composite GAN model<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L28\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"28\"><\/td>\n          <td id=\"file-art053_python_010-py-LC28\" class=\"blob-code blob-code-inner js-file-line\">        <span class=pl-s1>generator_loss<\/span> <span class=pl-c1>=<\/span> <span class=pl-s1>gan_model<\/span>.<span class=pl-en>train_on_batch<\/span>(<span class=pl-s1>x_gan<\/span>, <span class=pl-s1>y_gan<\/span>)<\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L29\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"29\"><\/td>\n          <td id=\"file-art053_python_010-py-LC29\" class=\"blob-code blob-code-inner js-file-line\">        <\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L30\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"30\"><\/td>\n          <td id=\"file-art053_python_010-py-LC30\" class=\"blob-code blob-code-inner js-file-line\">        <span class=pl-c># Evaluate the model at every n_eval epochs<\/span><\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L31\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"31\"><\/td>\n          <td id=\"file-art053_python_010-py-LC31\" class=\"blob-code blob-code-inner js-file-line\">        <span class=pl-k>if<\/span> (<span class=pl-s1>i<\/span>) <span class=pl-c1>%<\/span> <span class=pl-s1>n_eval<\/span> <span class=pl-c1>==<\/span> <span class=pl-c1>0<\/span>:<\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L32\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"32\"><\/td>\n          <td id=\"file-art053_python_010-py-LC32\" class=\"blob-code blob-code-inner js-file-line\">            <span class=pl-en>print<\/span>(<span class=pl-s>&quot;Epoch number: &quot;<\/span>, <span class=pl-s1>i<\/span>)<\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L33\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"33\"><\/td>\n          <td id=\"file-art053_python_010-py-LC33\" class=\"blob-code blob-code-inner js-file-line\">            <span class=pl-en>print<\/span>(<span class=pl-s>&quot;*** Training ***&quot;<\/span>)<\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L34\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"34\"><\/td>\n          <td id=\"file-art053_python_010-py-LC34\" class=\"blob-code blob-code-inner js-file-line\">            <span class=pl-en>print<\/span>(<span class=pl-s>&quot;Discriminator Loss &quot;<\/span>, <span class=pl-s1>discriminator_loss<\/span>)<\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L35\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"35\"><\/td>\n          <td id=\"file-art053_python_010-py-LC35\" class=\"blob-code blob-code-inner js-file-line\">            <span class=pl-en>print<\/span>(<span class=pl-s>&quot;Generator Loss: &quot;<\/span>, <span class=pl-s1>generator_loss<\/span>)<\/td>\n        <\/tr>\n        <tr>\n          <td id=\"file-art053_python_010-py-L36\" class=\"blob-num js-line-number js-code-nav-line-number js-blob-rnum\" data-line-number=\"36\"><\/td>\n          <td id=\"file-art053_python_010-py-LC36\" class=\"blob-code blob-code-inner js-file-line\">            <span class=pl-en>performance_summary<\/span>(<span class=pl-s1>g_model<\/span>, <span class=pl-s1>d_model<\/span>, <span class=pl-s1>dataset<\/span>, <span class=pl-s1>latent_dim<\/span>)<\/td>\n        <\/tr>\n  <\/table>\n<\/div>\n\n\n    <\/div>\n\n  <\/div>\n<\/div>\n\n      <\/div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/SolClover/4bb625ecee1eafd78d3a03936537b244/raw/dff4130b7323cbd5845b57adb3eac372cd95665a/Art053_Python_010.py\" style=\"float:right\" class=\"Link--inTextBlock\">view raw<\/a>\n        <a href=\"https://gist.github.com/SolClover/4bb625ecee1eafd78d3a03936537b244#file-art053_python_010-py\" class=\"Link--inTextBlock\">\n          Art053_Python_010.py\n        <\/a>\n        hosted with &#10084; by <a class=\"Link--inTextBlock\" href=\"https://github.com\">GitHub<\/a>\n      <\/div>\n    <\/div>\n<\/div>\n')
